busy_hours = mode(hours),
busy_week = mode(weekday),
Tip_amount = mean(Tip_amount)))
data.frame(green%>%
group_by(jfk_pick_airport)%>%
summarise(avg_Fare = mean(Fare_amount),
busy_hours = mode(hours),
busy_week = mode(weekday),
Tip_amount = mean(Tip_amount)))
green$tip_prc = ifelse(green$Tip_amount==0.00 | green$Total_amount==0.00 , 0.00,
round(green$Tip_amount/green$Total_amount,4))
green = green[!is.na(green$tip_prc),]
plot(green$Total_amount,green$Tip_amount)
ggplot(green, aes(x=tip_prc)) +
geom_histogram(binwidth=.01, colour="black", fill="white") +
xlim(0,0.4) + ylim(0,400000) + labs(title="Histogram for Tip Percentage")
cat("Average tip percentage", round((sum(green$Tip_amount, na.rm=T)/sum(green$Total_amount,na.rm=T)),5)*100,"%")
cor(green[,c(10,11,12,13,14,15,16,18,19)])
str(green)
green$VendorID = factor(green$VendorID)
green$RateCodeID = factor(green$RateCodeID)
green$Payment_type = factor(green$Payment_type)
green$Trip_type = factor(green$Trip_type)
green$jfk_drop_airport = factor(green$jfk_drop_airport)
green$jfk_pick_airport = factor(green$jfk_pick_airport)
green$weekday = factor(green$weekday)
summary(green)
green = green[!green$Fare_amount < 0,]
green = green[!green$Tolls_amount < 0,]
green = green[!green$Total_amount < 0,]
green = green[!green$Tip_amount < 0,]
green = green[green$Tip_amount < green$Fare_amount,]
green = green[!green$Trip_distance > 50,]
green = green[!green$time_of_travel > 100,]
ggplot(green, aes(x=time_of_travel)) +
geom_histogram(binwidth=.1, colour="black", fill="white") + xlim(0,100) +
labs(title="Histogram for Trip Distance")
green <- green[!(green$time_of_travel == 0 & green$Fare_amount != 0),]
green <- green[!(green$time_of_travel != 0 & green$Fare_amount == 0),]
green$speed = ifelse(green$Trip_distance==0.00 | green$time_of_travel==0.00 ,0.00,
round((green$Trip_distance/green$time_of_travel)*60,4))
green$day = as.numeric(format(strptime(green$lpep_pickup_datetime, "%Y-%m-%d %H:%M:%S"),"%d"))
green$week_num = ifelse(green$day <= 7,1,
ifelse(green$day <= 14,2,
ifelse(green$day <= 21,3,4)))
data.frame(green%>%group_by(week_num)%>%
summarise(average_speed = mean(speed)))
speed_time <- data.frame(green%>%group_by(hours)%>%
summarise(average_speed = mean(speed)))
ggplot(data=speed_time, aes(x=hours,y=average_speed))+ geom_line()+
scale_x_continuous(breaks = seq(0,23,2))
x = rep(0,100)
s = rep(0,100)
p = rep(0,10000)
for (i in 1:10000) {
x = rnorm(100, mean = 0.1, sd = 1)
for (j in 1:100) {
s[j] = sum(x[1:j])
}
if (max(s)>10) {
p[i] = exp(0.5-s[100]/10)
}
}
mean(p)
x1 = rep(0,100)
s1 = rep(0,100)
p1 = rep(0,10000)
for (i in 1:10000) {
x1 = rnorm(100, mean = 0.1, sd = 1)
for (j in 1:100) {
s1[j] = sum(x1[1:j])
}
if (max(s1)>10) {
p1[i] = exp(0.5-s1[100]/10)
}
}
mean(p1)
x2 = rep(0,100)
s2 = rep(0,100)
p2 = rep(0,10000)
for (i in 1:10000) {
x2 = rnorm(100, mean = 0.3, sd = 1)
for (j in 1:100) {
s2[j] = sum(x2[1:j])
}
if (max(s2)>10) {
p2[i] = exp(1.5-0.3*s2[100])
}
}
mean(p2)
set.seed(622)
x1 = rep(0,100)
s1 = rep(0,100)
p1 = rep(0,10000)
for (i in 1:10000) {
x1 = rnorm(100, mean = 0.1, sd = 1)
for (j in 1:100) {
s1[j] = sum(x1[1:j])
}
if (max(s1)>10) {
p1[i] = exp(0.5-s1[100]/10)
}
}
mean(p1)
set.seed(622)
x1 = rep(0,100)
s1 = rep(0,100)
p1 = rep(0,10000)
for (i in 1:10000) {
x1 = rnorm(100, mean = 0.1, sd = 1)
for (j in 1:100) {
s1[j] = sum(x1[1:j])
}
if (max(s1)>10) {
p1[i] = exp(0.5-s1[100]/10)
}
}
mean(p1)
set.seed(622)
x2 = rep(0,100)
s2 = rep(0,100)
p2 = rep(0,10000)
for (i in 1:10000) {
x2 = rnorm(100, mean = 0.3, sd = 1)
for (j in 1:100) {
s2[j] = sum(x2[1:j])
}
if (max(s2)>10) {
p2[i] = exp(1.5-0.3*s2[100])
}
}
mean(p2)
set.seed(622)
x2 = rep(0,100)
s2 = rep(0,100)
p2 = rep(0,10000)
for (i in 1:10000) {
x2 = rnorm(100, mean = 0.3, sd = 1)
for (j in 1:100) {
s2[j] = sum(x2[1:j])
}
if (max(s2)>10) {
p2[i] = exp(1.5-0.3*s2[100])
}
}
mean(p2)
A = matrix(cbind(1/2,0,0,0,1/2))
View(A)
A = matrix(cbind(1/2,1/2,0,0,0),cbind(0,1/2,1/2,0,0),cbind(0,0,1/2,1/2,0),cbind(0,0,0,1/2,0),cbind(0,0,0,0,1/2))
setwd("D:/Study/UChicago/Second Quarter/STAT34700/HW4")
library(faraway)
data(leafblotch)
head(leafblotch)
View(leafblotch)
install.packages("knitr")
install.packages("rmarkdown")
knitr::opts_chunk$set(echo = TRUE)
library(faraway)
data(leafblotch)
library(ggplot2)
leafblotch$site=factor(leafblotch$site,levels=c("1","2","3","4","5","6","7","8","9"))
ggplot(leafblotch, aes(x=variety, y=blotch, group=site, linetype=site))+geom_line()
plot(blotch~site, data=leafblotch)
plot(blotch,site, data=leafblotch)
plot(leafblotch$blotch,leafblotch$site)
plot(leafblotch$site,leafblotch$blotch)
library(faraway)
data(leafblotch)
library(ggplot2)
plot(leafblotch$site,leafblotch$blotch)
plot(leafblotch$variety,leafblotch$blotch)
leafblotch$site=as.numeric(as.character(leafblotch$site))
leafblotch$site=as.numeric(as.character(leafblotch$site))
View(leafblotch)
leafblotch$variety=as.numeric(as.character(leafblotch$variety))
plot(leafblotch$site,leafblotch$blotch)
library(faraway)
data(leafblotch)
library(ggplot2)
leafblotch$site=as.numeric(as.character(leafblotch$site))
leafblotch$variety=as.numeric(as.character(leafblotch$variety))
plot(leafblotch$site,leafblotch$blotch,xlab="site", ylab="blotch", main="blotch vs site")
plot(leafblotch$variety,leafblotch$blotch,xlab="variety", ylab="blotch", main="blotch vs variety")
fitbin = glm(blotch~site+variety, family=binomial, data=leafblotch)
leafblotch$blotch1=leafblotch$blotch*10000
fitbin = glm(blotch1~site+variety, family=binomial, data=leafblotch)
leafblotch$unblo = 10000-leafblotch$blotch1
fitbin = glm(cbind(blotch1,unblo)~site+variety, family=binomial, data=leafblotch)
sumary(fitbin)
summary(fitbin)
leafblotch$site=as.factor(as.character(leafblotch$site))
leafblotch$variety=as.factor(as.character(leafblotch$variety))
fitbin = glm(cbind(blotch1,unblo)~site+variety, family=binomial, data=leafblotch)
summary(fitbin)
fitqbin = glm(cbind(blotch1,unblo)~site+variety, family=quasibinomial, data=leafblotch)
summary(fitqbin)
leafblotch$site=as.numeric(as.character(leafblotch$site))
leafblotch$variety=as.numeric(as.character(leafblotch$variety))
fitqbin = glm(cbind(blotch1,unblo)~site+variety, family=quasibinomial, data=leafblotch)
summary(fitqbin)
library(geeM)
install.packages("geeM")
library(geeM)
LinkFun <- function(mu){return(log(mu/(1-mu)))}
InvLink <- function(theta){return(exp(theta)/(1+exp(theta)))}
InvLinkDeriv <- function(theta){return(exp(theta)/(1+exp(theta))^2)}
VarFun <- function(mu){return(mu^2*(1-mu)^2)}
FunList <- list(LinkFun, VarFun, InvLink, InvLinkDeriv)
meed=geem(blotch~site+variety,family=FunList,data=leafblotch)
summary(meed)
View(leafblotch)
leafblotch$site=as.factor(as.character(leafblotch$site))
leafblotch$variety=as.factor(as.character(leafblotch$variety))
View(leafblotch)
meed=geem(blotch~site+variety,family=FunList,data=leafblotch)
summary(meed)
fitqbin = glm(blotch~site+variety, family=quasibinomial, data=leafblotch)
summary(fitqbin)
fitbin = glm(blotch~site+variety, family=binomial, data=leafblotch)
plot(fitqbin)
View(leafblotch)
drop1(meed, test="F")
plot(meed)
knitr::opts_chunk$set(echo = TRUE)
leafblotch$blotch1=leafblotch$blotch*10000
library(faraway)
data(leafblotch)
library(ggplot2)
leafblotch$site=as.numeric(as.character(leafblotch$site))
leafblotch$variety=as.numeric(as.character(leafblotch$variety))
plot(leafblotch$site,leafblotch$blotch,xlab="site", ylab="blotch", main="blotch vs site")
plot(leafblotch$variety,leafblotch$blotch,xlab="variety", ylab="blotch", main="blotch vs variety")
leafblotch$blotch1=leafblotch$blotch*10000
leafblotch$unblo = 10000-leafblotch$blotch1
leafblotch$site=as.factor(as.character(leafblotch$site))
leafblotch$variety=as.factor(as.character(leafblotch$variety))
fitbin = glm(cbind(blotch1,unblo)~site+variety, family=binomial, data=leafblotch)
summary(fitbin)
fitqbin = glm(blotch~site+variety, family=quasibinomial, data=leafblotch)
summary(fitqbin)
plot(fitqbin)
knitr::opts_chunk$set(echo = TRUE)
library(faraway)
data(coagulation)
View(coagulation)
library(lme4)
install.packages("lme4")
install.packages("lme4")
library(faraway)
install.packages("lme4")
library(lme4)
install.packages("lme4")
knitr::opts_chunk$set(echo = TRUE)
library(lme4)
library(faraway)
data(coagulation)
ggplot(coagulation, aes(x=diet, y=coag))+geom_point(position = position_jitter(width=0.1, height=0.0))
library(ggplot2)
ggplot(coagulation, aes(x=diet, y=coag))+geom_point(position = position_jitter(width=0.1, height=0.0))
fit_fix = lm (coag ~ diet, data = coagulation)
summary(fit_fix)
drop1(fit_fix, test="F")
fit_fix = lm (coag ~ diet, data = coagulation)
summary(fit_fix)
drop1(fit_fix, test="F")
predict(fit_fix, new=data.frame(diet="D"), interval="prediction")
fit_fix = lm (coag ~ diet, data = coagulation)
summary(fit_fix)
drop1(fit_fix, test="F")
predict(fit_fix, new=data.frame(diet="D"), interval="prediction")
fit_ran=lmer(coag~1+(1|diet),data=coagulation)
summary(fit_ran)
predict(fit_ran, new=data.frame(diet="D"))
predict(fit_ran, new=data.frame(diet="D"),interval="prediction")
predict(fit_ran, newdata=data.frame(diet="D"),interval="prediction")
predict(fit_ran, newdata=data.frame(diet="D"))
fit_ran=lmer(coag~1+(1|diet),data=coagulation)
summary(fit_ran)
predict(fit_ran, newdata=data.frame(diet="D"))
fit_ran=lmer(coag~1+(1|diet),data=coagulation)
summary(fit_ran)
predict(fit_ran, newdata=data.frame(diet="D"))
fit_ran=lmer(coag~1+(1|diet),data=coagulation)
summary(fit_ran)
predict(fit_ran, newdata=data.frame(diet="D"))
pv = numeric(1000)
for(i in 1:1000){
y <- unlist(simulate(fit_ran, use.u=TRUE))
fit_ran2 <- refit(fit_ran, y)
pv[i] <- predict(fit_ran2, newdata=data.frame(diet="D")) + rnorm(n=1,sd=resid.sd)
}
VarCorr(fit_ran)
resid.sd <- as.data.frame(VarCorr(fit_ran))$sdcor[2]
fit_ran=lmer(coag~1+(1|diet),data=coagulation)
summary(fit_ran)
predict(fit_ran, newdata=data.frame(diet="D"))
resid.sd <- as.data.frame(VarCorr(fit_ran))$sdcor[2]
pv = numeric(1000)
for(i in 1:1000){
y <- unlist(simulate(fit_ran, use.u=TRUE))
fit_ran2 <- refit(fit_ran, y)
pv[i] <- predict(fit_ran2, newdata=data.frame(diet="D")) + rnorm(n=1,sd=resid.sd)
}
quantile(pv, c(0.025, 0.975))
var(pv)
fit_ran=lmer(coag~1+(1|diet),data=coagulation)
summary(fit_ran)
#predicted value
predict(fit_ran, newdata=data.frame(diet="D"))
#bootstrap to get variance of random effects
resid.sd <- as.data.frame(VarCorr(fit_ran))$sdcor[2]
pv = numeric(1000)
set.seed(123)
for(i in 1:1000){
y <- unlist(simulate(fit_ran, use.u=TRUE))
fit_ran2 <- refit(fit_ran, y)
pv[i] <- predict(fit_ran2, newdata=data.frame(diet="D")) + rnorm(n=1,sd=resid.sd)
}
quantile(pv, c(0.025, 0.975))
predict(fit_ran, re.form=~0)
group.sd <- as.data.frame(VarCorr(fit_ran))$sdcor[1]
pv2 <- numeric(1000)
for(i in 1:1000){
y2 <- unlist(simulate(fit_ran))
fit_ran2 <- refit(fit_ran, y2)
pv2[i] <- predict(fit_ran2, re.form=~0)[1] + rnorm(n=1,sd=group.sd) + rnorm(n=1,sd=resid.sd)
}
quantile(pv2, c(0.025, 0.975))
predict(fit_ran, re.form=~0)[1]
group.sd <- as.data.frame(VarCorr(fit_ran))$sdcor[1]
pv2 <- numeric(1000)
for(i in 1:1000){
y2 <- unlist(simulate(fit_ran))
fit_ran2 <- refit(fit_ran, y2)
pv2[i] <- predict(fit_ran2, re.form=~0)[1] + rnorm(n=1,sd=group.sd) + rnorm(n=1,sd=resid.sd)
}
quantile(pv2, c(0.025, 0.975))
knitr::opts_chunk$set(echo = TRUE)
library(faraway)
data(leafblotch)
library(ggplot2)
leafblotch$site=as.numeric(as.character(leafblotch$site))
leafblotch$variety=as.numeric(as.character(leafblotch$variety))
plot(leafblotch$site,leafblotch$blotch,xlab="site", ylab="blotch", main="blotch vs site")
plot(leafblotch$variety,leafblotch$blotch,xlab="variety", ylab="blotch", main="blotch vs variety")
leafblotch$site=as.factor(as.character(leafblotch$site))
leafblotch$variety=as.factor(as.character(leafblotch$variety))
fitbin = glm(blotch~site+variety, family=binomial, data=leafblotch)
summary(fitbin)
fitqbin = glm(blotch~site+variety, family=quasibinomial, data=leafblotch)
summary(fitqbin)
plot(fitqbin)
miu = 1/(fitted(fitqbin)*(1-fitted(fitqbin)))
fit_1e = glm(blotch~site+variety,family=quasibinomial,data=leafblotch,weights = miu)
plot(fit_1e)
summary(fit_1e)
drop1(fit_1e, test="F")
knitr::opts_chunk$set(cache=TRUE)
knitr::opts_chunk$set(echo=FALSE)
knitr::opts_chunk$set(message=FALSE)
library(faraway)
library(lme4)
library(ggplot2)
data(coagulation)
ggplot(coagulation, aes(x=diet, y=coag))+geom_point(position = position_jitter(width=0.1, height=0.0))
data(coagulation)
ggplot(coagulation, aes(x=diet, y=coag))+geom_point(position = position_jitter(width=0.1, height=0.0))
fit_fix = lm (coag ~ diet, data = coagulation)
summary(fit_fix)
drop1(fit_fix, test="F")
predict(fit_fix, new=data.frame(diet="D"), interval="prediction")
knitr::opts_chunk$set(echo = TRUE)
library(faraway)
install.packages("RLRsim")
library(RLRsim)
library(ggplot2)
library(lme4)
library(pbkrtest)
ggplot(lawn, aes(y=time, x=machine, shape=manufact, col=speed))+geom_point()+xlab("Machine")
fit_e = lmer(time~speed+(1|machine), data=lawn)
summary(fit_e)
fit_ef = lm(time~speed, data=lawn)
exactLRT(fit_e, fit_ef)
fit_f = lmer(time~speed+(1|manufact)+(1|manufact:machine), data=lawn)
summary(fit_f)
#machine
bsdmac <- numeric(1000)
set.seed(123)
for(i in 1:1000){
y <- unlist(simulate(fit_f))
bmod <- refit(fit_f, y)
bsdmac[i] <- as.data.frame(VarCorr(bmod))$sdcor[1]
}
quantile(bsdmac, c(0.025, 0.975))
#manufact
bsdman <- numeric(1000)
for(i in 1:1000){
yn <- unlist(simulate(fit_f))
bmodn <- refit(fit_f, yn)
bsdman[i] <- as.data.frame(VarCorr(bmodn))$sdcor[2]
}
quantile(bsdman, c(0.025, 0.975))
confint(fit_f, method="boot")
leafblotch$site=as.factor(as.character(leafblotch$site))
leafblotch$variety=as.factor(as.character(leafblotch$variety))
fitbin = glm(blotch~site+variety, family=binomial, data=leafblotch)
sumary(fitbin)
View(leafblotch)
leafblotch$site=as.factor(as.character(leafblotch$site))
leafblotch$variety=as.factor(as.character(leafblotch$variety))
fitbin = glm(blotch~site+variety, family=binomial, data=leafblotch)
summary(fitbin)
pchisq(deviance(fitbin),df.residual(fitbin),lower=FALSE)
fitqbin = glm(blotch~site+variety, family=quasibinomial, data=leafblotch)
summary(fitqbin)
fitqbin = glm(blotch~site+variety, family=quasibinomial, data=leafblotch)
sumary(fitqbin)
dispersion = sum(residuals(fitbin,type = "pearson")^2)/df.residual(fitbin)
dispersion
miu = 1/(fitted(fitqbin)*(1-fitted(fitqbin)))
fit_1e = glm(blotch~site+variety,family=quasibinomial,data=leafblotch,weights = miu)
plot(fit_1e)
summary(fit_1e)
miu = 1/(fitted(fitqbin)*(1-fitted(fitqbin)))
fit_1e = glm(blotch~site+variety,family=binomial,data=leafblotch,weights = miu)
plot(fit_1e)
summary(fit_1e)
miu = 1/(fitted(fitqbin)*(1-fitted(fitqbin)))
fit_1e = glm(blotch~site+variety,family=binomial,data=leafblotch,weights = miu)
plot(fit_1e)
summary(fit_1e)
miu = 1/(fitted(fitqbin)*(1-fitted(fitqbin)))
fit_1e = glm(blotch~site+variety,family=binomial,data=leafblotch,weights = miu)
plot(fit_1e)
summary(fit_1e)
miu = 1/(fitted(fitqbin)*(1-fitted(fitqbin)))
fit_1e = glm(blotch~site+variety,family=binomial,data=leafblotch,weights = miu)
plot(fit_1e)
sumary(fit_1e)
drop1(fit_1e, test="F")
anova(fit_1e)
miu = 1/(fitted(fitqbin)*(1-fitted(fitqbin)))
fit_1e = glm(blotch~site+variety,family=quasibinomial,data=leafblotch,weights = miu)
plot(fit_1e)
sumary(fit_1e)
drop1(fit_1e, test="F")
fit_fix = lm (coag ~ diet, data = coagulation)
summary(fit_fix)
predict(fit_fix, new=data.frame(diet="D"), interval="prediction")
predict(fit_fix, new=data.frame(diet="D"))
View(coagulation)
fit_ran=lmer(coag~1+(1|diet),data=coagulation)
summary(fit_ran)
#predicted value
predict(fit_ran, newdata=data.frame(diet="D"))
#bootstrap to get variance of random effects
resid.sd <- as.data.frame(VarCorr(fit_ran))$sdcor[2]
pv = numeric(1000)
set.seed(123)
for(i in 1:1000){
y <- unlist(simulate(fit_ran, use.u=TRUE))
fit_ran1 <- refit(fit_ran, y)
pv[i] <- predict(fit_ran1, newdata=data.frame(diet="D")) + rnorm(n=1,sd=resid.sd)
}
quantile(pv, c(0.025, 0.975))
fit_fix = lm (coag ~ diet, data = coagulation)
summary(fit_fix)
predict(fit_fix, new=data.frame(diet="D"), interval="prediction")
predict(fit_ran, re.form=~0)[1]
group.sd <- as.data.frame(VarCorr(fit_ran))$sdcor[1]
pv2 <- numeric(1000)
for(i in 1:1000){
y2 <- unlist(simulate(fit_ran))
fit_ran2 <- refit(fit_ran, y2)
pv2[i] <- predict(fit_ran2, re.form=~0)[1] + rnorm(n=1,sd=group.sd) + rnorm(n=1,sd=resid.sd)
}
quantile(pv2, c(0.025, 0.975))
data(lawn)
fit_fix = lm(time~., data = lawn)
summary(fit_fix)
View(lawn)
data(lawn)
fit_fix = lm(time~., data = lawn)
summary(fit_fix)
data(lawn)
fit_fix = lm(time~., data = lawn)
sumary(fit_fix)
fit_c=lmer(time~manufact*speed+(1|machine),data=lawn)
sumary(fit_c)
data(lawn)
fit_fix = lm(time~., data = lawn)
summary(fit_fix)
fit_c=lmer(time~manufact*speed+(1|machine),data=lawn)
sumary(fit_c)
fit_c=lmer(time~manufact*speed+(1|machine),data=lawn)
summary(fit_c)
sqrt(145.2+132.3)
fit_df = lmer(time~manufact*speed+(1|machine), data=lawn, REML=FALSE)
fit_dn = lmer(time~manufact+speed+(1|machine), data=lawn, REML=FALSE)
KRmodcomp(fit_df, fit_dn)
fit_dm = lmer(time~manufact+(1|machine), data=lawn, REML=FALSE)
fit_ds = lmer(time~speed+(1|machine), data=lawn, REML=FALSE)
KRmodcomp(fit_dn, fit_dm)
KRmodcomp(fit_dn, fit_ds)
fit_e = lmer(time~speed+(1|machine), data=lawn)
summary(fit_e)
fit_ef = lm(time~speed, data=lawn)
exactLRT(fit_e, fit_ef)
fit_f = lmer(time~speed+(1|manufact)+(1|manufact:machine), data=lawn)
summary(fit_f)
confint(fit_f, method="boot")
confint(fit_f, method="boot")
