death=NULL
for (i in 1:10){
death = c(death,sum(data1999$Deaths[i:3*i]))
}
death1999=data.frame(death)
View(death1999)
View(data1999)
for (i in 1:30, i % 3 == 1){
death = c(death,sum(data1999$Deaths[i:3*i]))
}
for (i in 1:30){
if (i % 3 ==1){
death = c(death,sum(data1999$Deaths[i:3*i]))
}
}
for (i in 1:30){
if (i %% 3 ==1){
death = c(death,sum(data1999$Deaths[i:3*i]))
}
}
death=NULL
for (i in 1:30){
if (i %% 3 ==1){
death = c(death,sum(data1999$Deaths[i:i+2]))
}
}
View(death1999)
death=NULL
for (i in 1:30){
if (i %% 3 ==1){
death = c(death,data1999$Deaths[i]+data1999$Deaths[i+1]+data1999$Deaths[i+2]))
}
}
death=NULL
for (i in 1:30){
if (i %% 3 ==1){
death = c(death,data1999$Deaths[i]+data1999$Deaths[i+1]+data1999$Deaths[i+2])
}
}
death1999=data.frame(death)
hist(death1999)
hist(death)
plot(death)
row.names(death1999)=range(45:54)
row.names(death1999)=c(45,46,47,48,49,50,51,52,53,54)
plot(death1999)
death1999=NULL
for (i in 1:30){
if (i %% 3 ==1){
death1999 = c(death,data1999$Deaths[i]+data1999$Deaths[i+1]+data1999$Deaths[i+2])
}
}
death1999=NULL
for (i in 1:30){
if (i %% 3 ==1){
death1999 = c(death,data1999$Deaths[i]+data1999$Deaths[i+1]+data1999$Deaths[i+2])
}
}
death1999
death1999=NULL
for (i in 1:29){
if (i %% 3 ==1){
death1999 = c(death,data1999$Deaths[i]+data1999$Deaths[i+1]+data1999$Deaths[i+2])
}
}
death1999=NULL
for (i in 1:27){
if (i %% 3 ==1){
death1999 = c(death,data1999$Deaths[i]+data1999$Deaths[i+1]+data1999$Deaths[i+2])
}
}
death=NULL
for (i in 1:27){
if (i %% 3 ==1){
death = c(death,data1999$Deaths[i]+data1999$Deaths[i+1]+data1999$Deaths[i+2])
}
}
death=NULL
for (i in 1:30){
if (i %% 3 ==1){
death = c(death,data1999$Deaths[i]+data1999$Deaths[i+1]+data1999$Deaths[i+2])
}
}
death1=NULL
for (i in 1:30){
if (i %% 3 ==1){
death1 = c(death,data1999$Deaths[i]+data1999$Deaths[i+1]+data1999$Deaths[i+2])
}
}
age=c(45,46,47,48,49,50,51,52,53,54)
plot(age,death)
deatha=NULL
for (i in 1:30){
if (i %% 3 ==1){
deatha = c(death,data2013$Deaths[i]+data2013$Deaths[i+1]+data2013$Deaths[i+2])
}
}
View(data2013)
deatha=NULL
for (i in 1:30){
if (i %% 3 ==1){
deatha = c(deatha,data2013$Deaths[i]+data2013$Deaths[i+1]+data2013$Deaths[i+2])
}
}
death1999=NULL
for (i in 1:30){
if (i %% 3 ==1){
death1999 = c(death1999,data1999$Deaths[i]+data1999$Deaths[i+1]+data1999$Deaths[i+2])
}
}
age=c(45,46,47,48,49,50,51,52,53,54)
plot(age,death1999)
death2013=NULL
for (i in 1:30){
if (i %% 3 ==1){
death2013 = c(death2013,data2013$Deaths[i]+data2013$Deaths[i+1]+data2013$Deaths[i+2])
}
}
age=c(45,46,47,48,49,50,51,52,53,54)
plot(age,death2013)
plot(age,death1999,xlab="Age",ylab="Deaths",main="Age distribution in 1999")
plot(age,death2013,xlab="Age",ylab="Deaths",main="Age distribution in 2013")
install.packages("faraway")
library(faraway)
data("turtle",faraway)
data
data(faraway)
data(turtle)
view(turtle)
View(turtle)
turtle$total = turtle$male + turtle$female
turtle$fraction = turtle$male / turtle$total
plot(turtle$temp, turtle$fraction)
plot(turtle$fraction, turtle$temp)
plot(turtle$temp,turtle$fraction)
fit_2b = glm(cbind(male,female)~temp,family=binomial,data=turtle)
summary(fit_2b)
pchisq(deviance(fit_2b),df.residual(fit_2b),lower=FALSE)
halfnorm(residuals(fit_2b))
pchisq(74.508-24.942,lower=FALSE)
pchisq(74.508-24.942,df.residual(fit_2b),lower=FALSE)
pchisq(74.508-24.942,1,lower=FALSE)
elogits = with(turtle,log((male+0.5)/(total- male+0.5)))
with(turtle,interaction.plot(temp,elogits))
plot(elogits, turtlr$temp)
plot(elogits, turtle$temp)
plot(turtle$temp,elogits)
fit_2d = glm(cbind(male,female)~temp + temp^2,family=binomial,turtle)
summary(fit_2d)
newturtle = matrix(rep(0,25),nrow=5,ncol=5)
View(newturtle)
newturtle$V1 = c(27.2,27.7,28.3,28.4,29.9)
newturtle = matrix(rep(0,25),nrow=5,ncol=5)
newturtle$V1
newturtle = data.frame(matrix(rep(0,25),nrow=5,ncol=5))
newturtle$V1
newturtle$V1 = c(27.2,27.7,28.3,28.4,29.9)
newturtle = data.frame(matrix(rep(0,25),nrow=5,ncol=5))
newturtle$X1 = c(27.2,27.7,28.3,28.4,29.9)
male=NULL
for (i in 1:15){
if (i %% 3 ==1){
male = c(male,turtle$male[i]+turtle$male[i+1]+dturtle$male[i+2])
}
}
male=NULL
for (i in 1:15){
if (i %% 3 ==1){
male = c(male,turtle$male[i]+turtle$male[i+1]+turtle$male[i+2])
}
}
newturtle$X2 = male
total=NULL
for (i in 1:15){
if (i %% 3 ==1){
total = c(total,turtle$total[i]+turtle$total[i+1]+turtle$total[i+2])
}
}
newturtle$X4 = total
newturtle$X3 = newturtle$X4 - newturtle$X2
newturtle$X5 = newturtle$X2 / newturtle$X4
colnames(newturtle)=c("temp","male","female","total","proportion")
fit_2h = glm(cbind(male,female) ~ temp, family=binomial, data=newturtle)
summary(fit_2h)
pchisq(deviance(fit_2h),df.residual(fit_2h),lower=FALSE)
pchisq(deviance(fit_2b),df.residual(fit_2b),lower=FALSE)
pchisq(64.429-14.863,1,lower=FALSE)
var(turtle[1:3,5])
data(chredlin)
help(chredlin)
View(chredlin)
hist(chredlin$involact)
hist(chredlin$involact,breaks=20)
hist(chredlin$involact,xlab=c(0,2.3),breaks=22)
hist(chredlin$involact,xlab=range(0,2.3),breaks=22)
hist(chredlin$involact,xlim=range(0,2.3),breaks=22)
if (i %% 3 ==1){
total = c(total,turtle$total[i]+turtle$total[i+1]+turtle$total[i+2])
}
hist(chredlin$involact,xlim=0:2.3,breaks=22)
hist(chredlin$involact,xlim=c(0,2.3),breaks=22)
hist(chredlin$involact,breaks=seq(0,2.3,by=0.1))
hist(chredlin$involact,breaks=seq(0,2.3,by=0.05))
help(chredlin)
fit_3b = glm(involact ~ race + fire + theft + age + income, family=gaussain, data=chredlin)
fit_3b = glm(involact ~ race + fire + theft + age + income, family=gaussian, data=chredlin)
summary(fit_3b)
summary(lm(involact ~ race + fire + theft + age + income, data=chredlin))
fit_3b = glm(involact ~ race + fire + theft + age + log(income), family=gaussian, data=chredlin)
summary(fit_3b)
residuals(fit_3b)
fit_3b1 = lm(involact ~ race + fire + theft + age + log(income), data=chredlin)
summary(fit_3b1)
residuals(fit_3b1)
plot(fit_3b1)
chredlin$binary=rep(1,47)
for (i in 1:47){
if (chredlin[i,5]==0){
chredlin[i,8]=0
}
}
fit_3e = glm(binary ~ race + fire + theft + age + log(income), family=binomial, data=chredlin)
fit_3b = glm(involact ~ race + fire + theft + age + log(income), family=gaussian, data=chredlin)
summary(fit_3e)
fit_3f = glm(binary ~ race + age, family=binomial, data=chredlin)
summary(fit_3f)
fit_3fr = glm(binary ~ race, family=binomial, data=chredlin)
summary(fit_3fr)
drop1(fit_3f,test="Chi")
plot(turtle$temp,turtle$fraction)
summary(fit_2b)
pchisq(deviance(fit_2b),df.residual(fit_2b),lower=FALSE)
pchisq(74.508-24.942,1,lower=FALSE)
halfnorm(residuals(fit_2b))
install.packages("faraway")
library(faraway)
halfnorm(residuals(fit_2b))
elogits = with(turtle,log((male+0.5)/(total- male+0.5)))
plot(turtle$temp,elogits)
summary(fit_2h)
pchisq(deviance(fit_2h),df.residual(fit_2h),lower=FALSE)
hist(chredlin$involact,breaks=seq(0,2.3,by=0.05))
summary(fit_3b)
plot(fit_3b1)
summary(fit_3e)
fit_3f = glm(binary ~ race + age, family=binomial, data=chredlin)
summary(fit_3f)
drop1(fit_3f,test="Chi")
fit_3fa = glm(binary ~ age, family=binomial, data=chredlin)
summary(fit_3fa)
pchisq(45.408-9.2286,1,lower=FALSE)
summary(fit_3fr)
pchisq(18.296-9.2286,1,lower=FALSE)
summary(fit_3f)
plot(chredlin$race,chredlin$age,pch="")
text(chredlin$race,chredlin$age,chredlin$binary,cex=1.0)
fit_3g = glm(binary ~ race + fire + theft + age + log(income), family=binomial(link=probit), data=chredlin)
summary(fit_3g)
summary(fit_3e)
fitted.values(fit_3g)
plot(fitted.values(fit_3e),fitted.values(fit_3g))
fitted.values(fit_3g)
a=fitted.values(fit_3e)
b=fitted.values(fit_3g)
fitted.values(fit_3e
fitted.values(fit_3e)
fitted.values(fit_3e)
hist(chredlin$involact,breaks=seq(0,2.3,by=0.05))
fit_3b = glm(involact ~ race + fire + theft + age + log(income), family=gaussian, data=chredlin)
summary(fit_3b)
residuals(fit_3b1)
plot(fit_3b1)
summary(fit_3e)
summary(fit_3f)
pchisq(45.408-9.2286,1,lower=FALSE)
pchisq(18.296-9.2286,1,lower=FALSE)
plot(chredlin$race,chredlin$age,pch="")
text(chredlin$race,chredlin$age,chredlin$binary,cex=1.0)
summary(fit_3g)
summary(fit_3e)
plot(fitted.values(fit_3e),fitted.values(fit_3g))
summary(fit_3b)
View(Mortality)
death1999=NULL
for (i in 1:30){
if (i %% 3 ==0){
death1999 = c(death1999,data1999$Deaths[i])
}
}
age=c(45,46,47,48,49,50,51,52,53,54)
plot(age,death1999,xlab="Age",ylab="Deaths",main="Age distribution in 1999")
death2013=NULL
for (i in 1:30){
if (i %% 3 ==0){
death2013 = c(death2013,data2013$Deaths[i])
}
}
age=c(45,46,47,48,49,50,51,52,53,54)
plot(age,death2013,xlab="Age",ylab="Deaths",main="Age distribution in 2013")
View(Mortality)
popu1999=NULL
for (i in 1:30){
if (i %% 3 ==0){
popu1999 = c(popu1999,data1999$Population[i])
}
}
age=c(45,46,47,48,49,50,51,52,53,54)
plot(age,popu1999,xlab="Age",ylab="Population",main="Age distribution in 1999")
popu2013=NULL
for (i in 1:30){
if (i %% 3 ==0){
popu2013 = c(popu2013,data2013$Population[i])
}
}
age=c(45,46,47,48,49,50,51,52,53,54)
plot(age,popu2013,xlab="Age",ylab="Population",main="Age distribution in 2013")
plot(age,popu1999,xlab="Age",ylab="Population",main="Age distribution in 1999")
plot(age,popu2013,xlab="Age",ylab="Population",main="Age distribution in 2013")
mort1999=NULL
for (i in 1:30){
if (i %% 3 == 0) {
mort1999 = c(mort1999,data1999$rate[i])
}
}
age=c(45,46,47,48,49,50,51,52,53,54)
plot(age,mort1999,xlab="Age",ylab="Mortality Rate",main="Mortality rate v.s. Age in 1999")
mort2013=NULL
for (i in 1:30){
if (i %% 3 == 0) {
mort2013 = c(mort2013,data2013$rate[i])
}
}
age=c(45,46,47,48,49,50,51,52,53,54)
plot(age,mort2013,xlab="Age",ylab="Mortality Rate",main="Mortality rate v.s. Age in 2013")
summary(fit_2f)
install.packages("faraway")
library(faraway)
data(turtle)
View(turtle)
turtle$total = turtle$male + turtle$female
turtle$proportion = turtle$male / turtle$total
plot(turtle$temp,turtle$proportion,main="Plot of Proportion of Males vs Temperature", xlab="Temperature", ylab="Proportion of Males")
fit_2b = glm(cbind(male,female)~temp,family=binomial,data=turtle)
summary(fit_2b)
x <- seq(27,30,0.1)
lines(x,ilogit(-61.31832+2.21103*x))
pchisq(deviance(fit_2b),df.residual(fit_2b),lower=FALSE)
no
halfnorm(residuals(fit_2b))
elogits = with(turtle,log((male+0.5)/(total- male+0.5)))
plot(turtle$temp,elogits,main="Plot of Empirical Logits vs Temperature", xlab="Temperature", ylab="Empirical Logits")
fit_2f = glm(cbind(male,female)~ temp + I(temp^2),family=binomial,turtle)
summary(fit_2f)
a = subset(Mortality, Race == "White")
mort = subset(a, Hisp == "NHisp")
mort$Alive = mort$Population - mort$Deaths
fit_1c = glm(cbind(Deaths,Alive) ~ Ages + Year, family=binomial, data=mort)
summary(fit_1c)
sumary(fit_1c)
View(mort)
mort$NotSuicide = mort$Population - mort$Suicide
fit_1ds = glm(cbind(Suicide,NotSuicide) ~ Ages + Year, family=binomial, data=mort)
sumary(fit_1ds)
mort$NotDrug = mort$Population - mort$drug_alc
fit_1dd = glm(cbind(drug_alc,NotDrug) ~ Ages + Year, family=binomial, data=mort)
sumary(fit_1dd)
data(turtle)
View(turtle)
turtle$total = turtle$male + turtle$female
turtle$proportion = turtle$male / turtle$total
plot(turtle$temp,turtle$proportion,main="Plot of Proportion of Males vs Temperature", xlab="Temperature", ylab="Proportion of Males")
View(turtle)
fit_2b = glm(cbind(male,female)~temp,family=binomial,data=turtle)
summary(fit_2b)
sumary(fit_2b)
fit_1c1 = glm(cbind(Deaths,Alive) ~ Ages, family=binomial, data=mort)
sumary(fit_1c1)
sumary(fit_1c)
fit_1c2 = glm(cbind(Deaths,Alive) ~ Year, family=binomial, data=mort)
sumary(fit_1c2)
plot(turtle$temp,turtle$proportion,main="Plot of Proportion of Males vs Temperature", xlab="Temperature", ylab="Proportion of Males")
x <- seq(27,30,0.1)
lines(x,ilogit(-61.31832+2.21103*x))
halfnorm(residuals(fit_2b))
plot(turtle$temp,elogits,main="Plot of Empirical Logits vs Temperature", xlab="Temperature", ylab="Empirical Logits")
fit_2e = lm(elogits ~ temp, data=turtle)
sumary(fit_2e)
fit_2f = glm(cbind(male,female)~ temp + I(temp^2),family=binomial,turtle)
summary(fit_2f)
sumary(fit_2f)
pchisq(deviance(fit_2b)-deviance(fit_2f),1,lower=FALSE)
pchisq(deviance(fit_2f),df.residual(fit_2f),lower=FALSE)
varob=c(var(turtle[1:3,5]),var(turtle[4:6,5]),var(turtle[7:9,5]),var(turtle[10:12,5]),var(turtle[13:15,5]))
varob=c(var(turtle[1:3,5]),var(turtle[4:6,5]),var(turtle[7:9,5]),var(turtle[10:12,5]),var(turtle[13:15,5]))
varob
for (i in 1:15){
turtle$var[i] = (fitted(fit_2f)[i]*(1-fitted(fit_2f)[i]))/turtle$total[i,4]
}
for (i in 1:15){
turtle$var[i] = (fitted(fit_2f)[i]*(1-fitted(fit_2f)[i]))/turtle$total[i]
}
var_ob = c(var(turtle[1:3,5]),var(turtle[4:6,5]),var(turtle[7:9,5]),var(turtle[10:12,5]),var(turtle[13:15,5]))
var_ex = NULL
for (i in 1:15){
if (i %% 3 == 1) {
var_ex = c(var_ex, 1/3*(turtle$var[i]+turtle$var[i+1]+turtle$var[i+2]))
}
}
var_ex
var_ob
newturtle = data.frame(matrix(rep(0,25),nrow=5,ncol=5))
newturtle$X1 = c(27.2,27.7,28.3,28.4,29.9)
male=NULL
for (i in 1:15){
if (i %% 3 ==1){
male = c(male,turtle$male[i]+turtle$male[i+1]+turtle$male[i+2])
}
}
newturtle$X2 = male
total=NULL
for (i in 1:15){
if (i %% 3 ==1){
total = c(total,turtle$total[i]+turtle$total[i+1]+turtle$total[i+2])
}
}
newturtle$X4 = total
newturtle$X3 = newturtle$X4 - newturtle$X2
newturtle$X5 = newturtle$X2 / newturtle$X4
colnames(newturtle)=c("temp","male","female","total","proportion")
View(newturtle)
fit_3f = glm(binary ~ race + age, family=binomial, data=chredlin)
sumary(fit_3f)
fit_2h = glm(cbind(male,female) ~ temp, family=binomial, data=newturtle)
sumary(fit_2h)
sumary(fit_2b)
summary(fit_2h)
pchisq(deviance(fit_2h),df.residual(fit_2h),lower=FALSE)
View(chredlin)
data(chredlin)
help(chredlin)
hist(chredlin$involact,breaks=seq(-0.05,2.25,by=0.1),xlab="Involact",main="Histogram of Involact")
fit_3b = glm(involact ~ race + fire + theft + age + log(income), family=gaussian, data=chredlin)
summary(fit_3b)
anova(fit_3b)
fit_3b1 = lm(involact ~ race + fire + theft + age + log(income), data=chredlin)
summary(fit_3b1)
fit_3b = lm(involact ~ race + fire + theft + age + log(income), data=chredlin)
summary(fit_3b)
sumary(fit_3b)
plot(fit_3b)
chredlin$binary=rep(1,47)
for (i in 1:47){
if (chredlin[i,5]==0){
chredlin[i,8]=0
}
}
fit_3d = glm(binary ~ race + fire + theft + age + log(income), family=binomial, data=chredlin)
summary(fit_3d)
sumary(fit_3d)
fit_3e = glm(binary ~ race + age, family=binomial, data=chredlin)
sumary(fit_3f)
summary(fit_3f)
fit_3ea = glm(binary ~ age, family=binomial, data=chredlin)
summary(fit_3fa)
sumary(fit_3fa)
fit_3er = glm(binary ~ race, family=binomial, data=chredlin)
sumary(fit_3fr)
pchisq(18.296-9.2286,1,lower=FALSE)
pchisq(45.408-9.2286,1,lower=FALSE)
plot(chredlin$race,chredlin$age,pch="")
text(chredlin$race,chredlin$age,chredlin$binary,cex=1.0)
plot(chredlin$race,chredlin$age,pch="",maim="Plot of Age against Race",xlab="race",ylab="age")
text(chredlin$race,chredlin$age,chredlin$binary,cex=1.0)
plot(chredlin$race,chredlin$age,pch="",main="Plot of Age against Race",xlab="race",ylab="age")
text(chredlin$race,chredlin$age,chredlin$binary,cex=1.0)
fit_3g = glm(binary ~ race + fire + theft + age + log(income), family=binomial(link=probit), data=chredlin)
summary(fit_3g)
sumary(fit_3g)
sumary(fit_3d)
a=fitted.values(fit_3e)
b=fitted.values(fit_3g)
plot(fitted.values(fit_3e),fitted.values(fit_3g),main="Plot of fitted values in logit and porbit model"
,xlab="fitted values in logit model")
plot(fitted.values(fit_3e),fitted.values(fit_3g),main="Plot of fitted values in logit and porbit model",xlab="fitted values in logit model")
plot(fitted.values(fit_3d),fitted.values(fit_3g),main="Plot of fitted values in logit and porbit model",xlab="fitted values in logit model")
plot(fitted.values(fit_3d),fitted.values(fit_3g),main="Plot of Fitted Values in logit and porbit Model",xlab="Fitted Values in logit Model",ylab="Fitted Values in probit Model")
plot(fitted.values(fit_3d),fitted.values(fit_3g),main="Plot of Fitted Values in logit and porbit Model")
fit_3e = glm(binary ~ race + fire + theft + age + log(income), family=binomial, data=chredlin)
fit_3g = glm(binary ~ race + age, family=binomial(link=probit), data=chredlin)
summary(fit_3g)
plot(fitted.values(fit_3e),fitted.values(fit_3g))
plot(fitted.values(fit_3f),fitted.values(fit_3g))
plot(fitted.values(fit_3d),fitted.values(fit_3g),main="Plot of Fitted Values in logit and porbit Model",xlab="Fitted Values in logit Model",ylab="Fitted Values in probit Model")
sumary(fit_3g)
install.packages("faraway")
library(faraway)
sumary(fit_3g)
fit_3g = glm(binary ~ race + age, family=binomial(link=probit), data=chredlin)
sumary(fit_3g)
fit_3e = glm(binary ~ race + age, family=binomial, data=chredlin)
summary(fit_3e)
fit_3er = glm(binary ~ race, family=binomial, data=chredlin)
sumary(fit_3er)
fit_3ea = glm(binary ~ age, family=binomial, data=chredlin)
sumary(fit_3ea)
plot(fitted.values(fit_3e),fitted.values(fit_3g), main="Plot of Fitted Values in logit and porbit Model", xlab="Fitted Values in logit Model", ylab="Fitted Values in probit Model")
sumary(fit_3g)
sumary(fit_3e)
fit_3e = glm(binary ~ race + age, family=binomial, data=chredlin)
sumary(fit_3e)
fit_3g = glm(binary ~ race + age, family=binomial(link=probit), data=chredlin)
fit_3d = glm(binary ~ race + fire + theft + age + log(income), family=binomial, data=chredlin)
